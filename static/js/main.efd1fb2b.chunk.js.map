{"version":3,"sources":["components/Tab/Tab.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["TabComponent","tab","onTabSelected","isSelected","href","id","onClick","title","Tabs","tabs","selectedTabId","selectedTab","find","className","map","classNames","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAQaA,EAAgC,SAAC,GAIvC,IAHLC,EAGI,EAHJA,IACAC,EAEI,EAFJA,cACAC,EACI,EADJA,WAQA,OACE,mBACEC,KAAI,WAAMH,EAAII,IACd,UAAQ,UACRC,QAVgB,WACbH,GACHD,EAAcD,IAKhB,SAKGA,EAAIM,SCfEC,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAR,EACI,EADJA,cAEMS,EAAcF,EAAKG,MAAK,SAAAX,GAAG,OAAIA,EAAII,KAAOK,MAAkBD,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAb,GAAG,OACX,oBAEE,UAAQ,MACRY,UAAWE,IAAW,CACpB,YAAad,EAAII,KAAOM,EAAYN,KAJxC,SAQE,cAAC,EAAD,CACEJ,IAAKA,EACLC,cAAeA,EACfC,WAAYF,EAAII,KAAOM,EAAYN,MAVhCJ,EAAII,WAiBjB,qBAAKQ,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAYK,cClCRP,EAAc,CACzB,CAAEJ,GAAI,QAASE,MAAO,QAASS,QAAS,eACxC,CAAEX,GAAI,QAASE,MAAO,QAASS,QAAS,eACxC,CAAEX,GAAI,QAASE,MAAO,QAASS,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAST,EAAK,IAApD,mBAAOE,EAAP,KAAoBQ,EAApB,KAOA,OACE,sBAAKN,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBF,EAAYJ,SAGlC,cAAC,EAAD,CACEE,KAAMA,EACNC,cAAeC,EAAYN,GAC3BH,cAfgB,SAACD,GACjBA,EAAII,KAAOM,EAAYN,IACzBc,EAAelB,UCdrBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.efd1fb2b.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ntype Props = {\n  tab: Tab,\n  onTabSelected: (tab: Tab) => void,\n  isSelected: boolean,\n};\n\nexport const TabComponent: React.FC<Props> = ({\n  tab,\n  onTabSelected,\n  isSelected,\n}) => {\n  const handleClick = () => {\n    if (!isSelected) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <a\n      href={`#${tab.id}`}\n      data-cy=\"TabLink\"\n      onClick={handleClick}\n    >\n      {tab.title}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\nimport { TabComponent } from '../Tab/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={classNames({\n                'is-active': tab.id === selectedTab.id,\n              })}\n            >\n\n              <TabComponent\n                tab={tab}\n                onTabSelected={onTabSelected}\n                isSelected={tab.id === selectedTab.id}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const onTabSelected = (tab: Tab) => {\n    if (tab.id !== selectedTab.id) {\n      setSelectedTab(tab);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}